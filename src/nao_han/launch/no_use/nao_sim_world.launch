<?xml version="1.0"?>
<launch>
  <arg name="world_file"  default="$(find nao_han)/worlds/playground.world"/>
  <arg name="gui" default="true"/>
  <!--<include file="$(find nao_han)/launch/gazebo_world.launch">-->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="world_name" value="$(arg world_file)"/>
  </include>

  <!-- Load the URDF Model -->
  <include file="$(find nao_description)/launch/upload_nao.launch" /> 

  <!-- Use PIDs?? -->

  <arg name="use_pid" value="true"/>
  <group if="$(arg use_pid)">
    <rosparam file="$(find nao_gazebo_plugin)/config/gazebo_ros_control_params.yaml" command="load"/>
  </group>

  <!-- Call Nao Robot Trajectory Controller -->

  <include file="$(find nao_control)/launch/nao_control_trajectory.launch"/>
<!--
  <include file="$(find nao_control)/launch/nao_control_position.launch"/>
-->
  <!-- Spawn a robot into Gazebo -->
<!--  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -x 0 -y 0 -z 0.335 -model nao_robot_v4_H25" /> -->
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -x -0.5 -y 1 -z 0.535 -model nao_v40" /> 


  <!-- Load the state publisher -->
  <include file="$(find nao_description)/launch/robot_state_publisher.launch" />



<!--

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

  <arg name="base"      value="$(optenv TURTLEBOT_BASE kobuki)"/> 
  <arg name="battery"   value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  
  
  <arg name="stacks"    value="$(optenv TURTLEBOT_STACKS hexagons)"/>  
  <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/> 
 

  
  
  <include file="$(find turtlebot_gazebo)/launch/includes/$(arg base).launch.xml">
    <arg name="base" value="$(arg base)"/>
    <arg name="stacks" value="$(arg stacks)"/>
    <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
  </include>
  

  

  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="/camera/depth/image_raw"/>
    <remap from="scan" to="/scan"/>
  </node>
-->
</launch>
